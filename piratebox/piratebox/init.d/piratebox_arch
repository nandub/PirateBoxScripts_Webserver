#!/bin/bash

. /etc/rc.conf
. /etc/rc.d/functions

# PATH for /opt piratebox folder
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin/:/usr/local/sbin:/opt/piratebox/bin

PIDFILE_DROOPY=/var/run/piratebox_droopy.pid
PIDFILE_HOSTAPN=/var/run/piratebox_hostapd.pid
PIDFILE_DNSMASQ=/var/run/piratebox_dnsmasq.pid
PIDFILE_LIGHTTPD=/opt/piratebox/tmp/lighttpd.pid

PIRATEBOX=/opt/piratebox
CONF=$PIRATEBOX/conf/piratebox.conf
#CONF_DROOPY=/opt/piratebox/conf/droopy.conf #not used
CONF_APN=$PIRATEBOX/conf/hostapd.conf

#Some extra config files for dnsmasq
CONF_DNSMASQ=$PIRATEBOX/conf/dnsmasq_generated.conf

CONF_LIGHTTPD=$PIRATEBOX/conf/lighttpd/lighttpd.conf

# Some things that run always
touch /var/lock/piratebox

if [ -f $CONF ] ; then
   . $CONF 
else 
   echo "Configuration file not found"
   exit 1
fi

# Do basic initialization on non-openWRT Systems, too
if [[ -f $PIRATEBOX/conf/init_done ]] ; then
   INIT=OK
else
   $PIRATEBOX/bin/hooks/hook_pre_init.sh  "$CONF"  
   $PIRATEBOX/bin/install_piratebox.sh "$CONF" part2
   $PIRATEBOX/bin/hooks/hook_post_init.sh  "$CONF"
fi

# Command Line for DNSMASQ,  use extra config file generated from command above
#CMD_DNSMASQ="-x $PIDFILE_DNSMASQ -C $CONF_DNSMASQ "

case $1 in
  start)

    stat_busy "Starting script piratebox "
    echo ""

    # Generate hosts & dnsmasq file
    $PIRATEBOX/bin/generate_config_files.sh  "$CONF"
    
    $PIRATEBOX/bin/hooks/hook_piratebox_start.sh  "$CONF"

    stat_busy "Empty tmp folder"
    find   $PIRATEBOX/tmp/  -exec rm {} \;

    if [ "$DO_IW" = "yes" ] ; then
       stat_busy " Setting up Interface (iw) "
       iw $PHY_IF interface add $INTERFACE type managed
    fi

    if [ "$DO_IFCONFIG" = "yes" ] ; then
      stat_busy "  Setting up wlan"
      #Setting up WLAN Interface
      piratebox_setup_wlan.sh  $CONF start
    fi
     if  [ $? -ne 0 ] ;  then
       stat_busy "failed setting up Interface"
     else

       # Only  activate
       if  [ "$USE_APN" =  "yes" ] ;  then
         stat_busy  "Starting hostap... "
         #start-stop-daemon -m --start --background --pidfile $PIDFILE_HOSTAPN  --exec /usr/sbin/hostapd --  $CONF_APN
         $PIRATEBOX/bin/hostapd_wrapper.sh start
         echo $?
       fi

      #BRIDGE
      if [ "$DO_BRIDGE" = "yes"  ] ; then
         stat_busy  "Adding $INTERFACE to bridge $BRIDGE //  brctl addif $BRIDGE  $INTERFACE "
         sleep 1
         BR_CMD="brctl addif  $BRIDGE  $INTERFACE"
         ( $BR_CMD ; )
         echo $?
      fi

       if [ "$USE_DNSMASQ" = "yes" ] ;  then
         stat_busy  "Starting dnsmasq... "
   # pidfile is written by dnsmasq
         #start-stop-daemon --start --quiet --exec /usr/sbin/dnsmasq  --  $CMD_DNSMASQ  
         $PIRATEBOX/bin/dnsmasq_wrapper.sh start
         echo $?
       fi


        if [ "$DROOPY_ENABLED" = "yes" ] ; then
          #Start here the PirateBox-Parts droopy i.e.
          #Delete 0 Byte Files
          delete_empty.sh  $UPLOADFOLDER
          find  $UPLOADFOLDER/ -iname tmp\* -exec rm {} \;

          DROOPY_USER=""
          if [ "$DROOPY_USE_USER" = "yes" ] ; then
            DROOPY_USER=" -c $LIGHTTPD_USER:$LIGHTTPD_GROUP "
          fi
          stat_busy "Starting droopy..."
          #start-stop-daemon $DROOPY_USER -m --start --background  --pidfile $PIDFILE_DROOPY --exec $PIRATEBOX/bin/droopy -- -H $HOST -d $UPLOADFOLDER -c "" -m "$DROOPY_TXT" $DROOPY_USERDIR  $DROOPY_PORT
          $PIRATEBOX/bin/droopy_wrapper.sh start
          echo $?
       fi

       #Writing init-message and reset chat..
       chmod 777 $CHATFILE
       if [ "$RESET_CHAT"  = "yes" ] ; then 
           echo $CHATMSG > $CHATFILE
       fi

       #Start here the lighttpd i.e.
       stat_busy "Starting lighttpd..."
       #start-stop-daemon --start --quiet  --pidfile $PIDFILE_LIGHTTPD --exec /usr/sbin/lighttpd -- -f $CONF_LIGHTTPD
       $PIRATEBOX/bin/lighttpd_wrapper.sh start
       echo $?
     fi

     $PIRATEBOX/bin/hooks/hook_piratebox_start_done.sh  "$CONF"
    ;;
  stop)
    stat_busy  "Stopping script piratebox"
    echo ""

     $PIRATEBOX/bin/hooks/hook_piratebox_stop.sh  "$CONF"

    if [  "$USE_APN"  = "yes" ] ;  then
       stat_busy  "Stopping hostap... "
       #start-stop-daemon --stop --quiet  --pidfile $PIDFILE_HOSTAPN  --oknodo  --startas "hostapd"
       $PIRATEBOX/bin/hostapd_wrapper.sh stop
       echo  $?
    fi
    if [ "$USE_DNSMASQ" = "yes" ] ;  then 
       stat_busy "Stopping dnsmasq..."
       #start-stop-daemon --stop --quiet  --pidfile $PIDFILE_DNSMASQ  
       $PIRATEBOX/bin/dnsmasq_wrapper.sh stop
       echo $?
    fi

    stat_busy "Stopping lighttpd..."
    #start-stop-daemon --stop --retry 30 --quiet --pidfile $PIDFILE_LIGHTTPD
    $PIRATEBOX/bin/lighttpd_wrapper.sh stop
    echo $?

    if [ "$DROOPY_ENABLED" = "yes" ] ; then
       #Kill Droopy
       stat_busy "Stopping droopy... "
       #start-stop-daemon --stop --quiet --pidfile  $PIDFILE_DROOPY --oknodo  --startas "python /opt/piratebox/bin/droopy"
       $PIRATEBOX/bin/droopy_wrapper.sh stop
       echo $?
    fi

     if [ "$DO_IFCONFIG" = yes ] ; then
       piratebox_setup_wlan.sh $CONF stop
     fi

     if [ "$DO_IW" = "yes" ] ; then
        iw dev $INTERFACE del
     fi

     # REMOVE BRIDGE
     if [ "$DO_BRIDGE" = "yes"  ] ; then
         stat_busy "Remove Bridge..."
         BR_CMD="brctl delif  $BRIDGE  $INTERFACE"
         ( $BR_CMD ; )
         echo $?
     fi

      $PIRATEBOX/bin/hooks/hook_piratebox_stop_done.sh  "$CONF"
    ;;
  restart)
    $0 stop
    sleep 3
    $0 start
    ;;
  *)
    echo "usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac

# vim: set ft=sh et ts=2 sw=2:
